{"version":3,"sources":["assets/noPosterSmall.png","assets/noImage.jpg","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/HomeContainer.js","Routes/Home/index.js","Routes/TV/TVPresenter.js","Routes/TV/TVContainer.js","Routes/TV/index.js","Routes/Search/SearchPresenter.js","Routes/Search/SearchContainer.js","Routes/Search/index.js","Routes/Detail/DetailPresenter.js","Routes/Detail/DetailContainer.js","Routes/Detail/index.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Contaier","div","Title","span","Grid","Section","title","children","Container","role","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","default","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","Loader","map","movie","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","state","a","data","results","console","log","this","setState","React","Component","HomeContainer","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","TVResults","event","preventDefault","searchByTerm","target","SearchContainer","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","includes","match","push","history","parsedId","parseInt","isNaN","DetailContainer","Routes","exact","path","component","Home","TV","render","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","rel","href","Router","GlobalStyles","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ebc095c1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.2dae8eb5.png\";","export default __webpack_public_path__ + \"static/media/noImage.467ba2df.jpg\";","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0px 10px;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 50px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid\r\n    ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Contaier = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Contaier>\r\n    <Title> {title} </Title>\r\n    <Grid> {children} </Grid>\r\n  </Contaier>\r\n);\r\n\r\nSection.propTypes = {\r\n  tilte: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 250px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      🐱‍👤\r\n    </span>\r\n  </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport Noimage from \"assets/noPosterSmall.png\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300/${imageUrl}`\r\n              : require(\"../assets/noImage.jpg\").default\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 19 ? `${title.substring(0, 19)}...` : title}\r\n      </Title>\r\n      <Year> {year} </Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movie - Hoflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming Movies\">\r\n            {upcoming.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Movies\">\r\n            {popular.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: propTypes.array,\r\n  upcoming: propTypes.array,\r\n  popular: propTypes.array,\r\n  error: propTypes.string,\r\n  loading: propTypes.bool.isRequired,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"3a74fd88ff1eacb2c32ae9eaaef00278\",\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n      console.log(nowPlaying);\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find movie information.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Show - Hoflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated Shows\">\r\n            {topRated.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Shows\">\r\n            {popular.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Today\">\r\n            {airingToday.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: propTypes.array,\r\n  popula: propTypes.array,\r\n  airingToday: propTypes.array,\r\n  loading: propTypes.bool.isRequired,\r\n  error: propTypes.string,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      this.setState({ topRated, popular, airingToday });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find TV information.\",\r\n      });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, error, loading } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  searchTerm,\r\n  handleSubmit,\r\n  loading,\r\n  error,\r\n  updateTerm,\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search - Hoflix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Show Results\">\r\n            {tvResults.map((show) => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n      </>\r\n    )}\r\n    {error && <Message color=\"#e74c3c\" text={error} />}\r\n    {tvResults &&\r\n      movieResults &&\r\n      tvResults.length === 0 &&\r\n      movieResults.length === 0 && (\r\n        <Message text=\"Nothing Found!\" color=\"#95a5a6\" />\r\n      )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: propTypes.array,\r\n  tvResults: propTypes.array,\r\n  loading: propTypes.bool.isRequired,\r\n  searchTerm: propTypes.string,\r\n  handleSubmit: propTypes.func.isRequired,\r\n  updateTerm: propTypes.func.isRequired,\r\n  error: propTypes.string,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { tvApi } from \"../../api\";\r\nimport { moviesApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    TVResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null,\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm(searchTerm);\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value,\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults,\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Can't find results.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        loading={loading}\r\n        error={error}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: -1;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  padding: 50px;\r\n  display: flex;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: 10;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading - Hoflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {`${\r\n            result.original_title ? result.original_title : result.original_name\r\n          } - Nomflix`}\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original/${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original/${result.poster_path}`\r\n              : require(\"../../assets/noPosterSmall.png\").default\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>▫</Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n            </Item>\r\n            <Divider>▫</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview> {result.overview} </Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: propTypes.object,\r\n  loading: propTypes.bool.isRequired,\r\n  error: propTypes.string,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    console.log(result);\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Header from \"Components/Header\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\nconst Routes = () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/TV\" component={TV} />\r\n        <Route path=\"/TV/popular\" render={() => <h1>Popular</h1>} />\r\n        <Route path=\"/Search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n\r\nexport default Routes;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color: rgba(20,20,20,1);\r\n        color: white;\r\n        padding-top:50px;\r\n    }\r\n\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\nimport Helmet from \"react-helmet\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Helmet>\n          <link\n            rel=\"shortcut icon\"\n            href=\"https://dh.aks.ac.kr/Edu/wiki/images/b/ba/%EB%AF%B8%EC%86%8C.jpeg\"\n          />\n        </Helmet>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\nimport \"./\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}